---
- hosts: web
  vars:  
    - LOCAL_PROJECT_HOME: "./app"
    - LOCAL_SYSTEMD_HOME: "./systemd"
    - LOCAL_NGINX_HOME: "./nginx"
    - PROJECT_HOME: "/srv/app/test-app"
    - MAIN_PY: "app.py"
    - PORT: 5000
    - USER: "ted"
  remote_user: "{{ USER }}"
  tasks:
    - name: Create app directory
      file: path={{ PROJECT_HOME }} state=directory owner={{ USER }} group=www-data

    - name: Create templates directory
      file: path={{ PROJECT_HOME }}/templates state=directory owner={{ USER }} group=www-data

    - name: Create main directory
      file: path={{ PROJECT_HOME }}/main state=directory owner={{ USER }} group=www-data

    - name: Copy app to directory
      copy: src={{ item }} dest={{ PROJECT_HOME }} owner={{ USER }} group=www-data
      with_fileglob:
        - "{{ LOCAL_PROJECT_HOME }}/*"

    - name: Copy templates to directory
      copy: src={{ item }} dest={{ PROJECT_HOME }}/templates owner={{ USER }} group=www-data
      with_fileglob:
        - "{{ LOCAL_PROJECT_HOME }}/templates/*"

    - name: Copy templates to directory
      copy: src={{ item }} dest={{ PROJECT_HOME }}/main owner={{ USER }} group=www-data
      with_fileglob:
        - "{{ LOCAL_PROJECT_HOME }}/main/*"

    - name: Install pip
      apt: name=python-pip state=latest

    - name: Install virtualenv
      apt: name=virtualenv

    - name: Create virtualenv for project
      shell: virtualenv "{{ PROJECT_HOME }}/venv"
             creates="{{ PROJECT_HOME }}/venv/bin/activate"

    - name: Install Flask in the virtualenv
      pip: 
        requirements: "{{ PROJECT_HOME }}/requirements.txt"
        virtualenv: "{{ PROJECT_HOME }}/venv"

    - name: Copy Systemd files
      template: src={{ item }} dest="/etc/systemd/system"
      with_fileglob:
        - "{{ LOCAL_SYSTEMD_HOME }}/*"

    - name: Reload systemd after adding systemd file
      systemd: daemon_reload=yes

    - name: Setup Nginx
      apt: name=nginx state=present update_cache=true

    - name: Copy Nginx files
      template: src={{ item }} dest="/etc/nginx/sites-available"
      with_fileglob:
        - "{{ LOCAL_NGINX_HOME }}/*"

    - name: Create symlink for nginx
      file:
        src: /etc/nginx/sites-available/webapp
        dest: /etc/nginx/sites-enabled/webapp
        state: link

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Start Webapp
      systemd:
        name: webapp
        state: restarted
